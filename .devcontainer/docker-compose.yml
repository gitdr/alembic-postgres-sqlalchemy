version: "3.4"

services:
  vscode:
    user: vscode
    image: dev:latest
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
      args:
        USER_ID: 1000
        GROUP_ID: 1000
    volumes:
      - ..:/workspace:cached
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.ssh:/home/user/.ssh

    working_dir: /workspace
    # Overrides default command so things don't shut down after the process ends.
    command: /bin/bash -c "sleep infinity"

    # labels:
    #   - traefik.enable=true

    #   - traefik.http.routers.main-frontend-http.rule=PathPrefix(`/`)
    #   - traefik.http.routers.main-frontend-http.service=main-frontend-http-service
    #   - traefik.http.services.main-frontend-http-service.loadbalancer.server.port=4200

    #   # "/api*" and "/dashboard*" are used by traefik so we use "/backend*" for our server
    #   - traefik.http.routers.main-backend-http.rule=PathPrefix(`/backend`)
    #   - traefik.http.routers.main-backend-http.service=main-backend-http-service
    #   - traefik.http.services.main-backend-http-service.loadbalancer.server.port=8080

  db:
    image: timescale/timescaledb:latest-pg14
    ports:
      - "2345:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "test"


  # db:
  #   image: postgres:14
  #   ports:
  #     - "2345:5432"
  #   environment:
  #     POSTGRES_USER: "postgres"
  #     POSTGRES_PASSWORD: "postgres"
  #     POSTGRES_DB: "test"

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.0.1
  #   container_name: zookeeper
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000

  # broker:
  #   image: confluentinc/cp-kafka:7.0.1
  #   container_name: broker
  #   ports:
  #     - "9092:9092"
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  # ksqldb-server:
  #   image: confluentinc/ksqldb-server:0.28.2
  #   hostname: ksqldb-server
  #   container_name: ksqldb-server
  #   depends_on:
  #     - broker
  #   ports:
  #     - "8088:8088"
  #   environment:
  #     KSQL_LISTENERS: http://0.0.0.0:8088
  #     KSQL_BOOTSTRAP_SERVERS: broker:29092
  #     KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
  #     KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"

  # ksqldb-cli:
  #   image: confluentinc/ksqldb-cli:0.28.2
  #   container_name: ksqldb-cli
  #   depends_on:
  #     - broker
  #     - ksqldb-server
  #   entrypoint: /bin/sh
  #   tty: true

  # traefik:
  #   image: traefik:2.7
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   command:
  #     - --providers.docker
  #     - --providers.docker.exposedbydefault=false
  #     - --api
  #     - --accesslog
  #     - --log.level=DEBUG

  #   ports:
  #     - 80:80

  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.api.rule=Host(`www.localhost`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
  #     - traefik.http.routers.api.service=api@internal
  #     - traefik.http.routers.api.middlewares=admin,dashboard-redirect

  #     # Basic auth example to secure traefik dashboard; username:password => test:test
  #     - traefik.http.middlewares.admin.basicauth.users=test:{SHA}qUqP5cyxm6YcTAhz05Hph5gvu9M=
  #     - traefik.http.middlewares.dashboard-redirect.redirectregex.regex=^http://www.localhost/(dashboard)$$
  #     - traefik.http.middlewares.dashboard-redirect.redirectregex.replacement=http://www.localhost/$${1}/

  #     - traefik.http.routers.main-proxy-http.rule=Host(`localhost`)
  #     - traefik.http.middlewares.www-redirect.redirectregex.regex=^http://localhost/(.*)
  #     - traefik.http.middlewares.www-redirect.redirectregex.replacement=http://www.localhost/$${1}
  #     - traefik.http.routers.main-proxy-http.middlewares=www-redirect
